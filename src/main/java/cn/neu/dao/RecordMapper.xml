<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="cn.neu.dao.RecordDao">
	<insert id="insertRecord" parameterType="cn.neu.bean.Record">
		insert into
		`record`(`goods_id`,`comment`,`price`,`type`,`mode`) values(
		#{goods_id,jdbcType=INTEGER},
		#{comment,jdbcType=VARCHAR},
		#{price,jdbcType=DOUBLE},
		#{type,jdbcType=INTEGER},
		#{mode,jdbcType=INTEGER}
		)
	</insert>
	<update id="updateRecord" parameterType="cn.neu.bean.Record">
		update `record` set id = #{id,jdbcType=INTEGER}
		<if test="goods_id !=0">
			, `goods_id` = #{goods_id,jdbcType=INTEGER}
		</if>
		<if test="comment !=null">
			, `comment` = #{comment,jdbcType=VARCHAR}
		</if>
		<if test="price !=0">
			, `price` = #{price,jdbcType=DOUBLE}
		</if>
		<if test="type !=0">
			, `type` = #{type,jdbcType=INTEGER}
		</if>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="listRecord" parameterType="cn.neu.dto.RecordDto"
		resultType="cn.neu.bean.Record">
		select r.id,r.goods_id,
		r.create_time,r.update_time,r.comment,r.price,r.type,g.name as
		goods_name from `record` as r left join `goods` as g on r.goods_id
		=
		g.id
		where 1=1
		<if test="type != 0">
			and r.type = #{type}
		</if>
		<if test="key !=null">
			and (r.id like '%${key}%'
			or r.goods_id like '%${key}%'
			or
			r.comment like '%${key}%'
			or r.price like '%${key}%'
			or g.name like
			'%${key}%' )
		</if>
		limit #{start},#{limit}
	</select>
	<select id="getTotalNum" parameterType="cn.neu.dto.RecordDto"
		resultType="Integer">
		select count(*) from `record` as r left join `goods` as g on r.goods_id
		=
		g.id
		where 1=1
		<if test="type != 0">
			and r.type = #{type}
		</if>
		<if test="key !=null">
			and (r.id like '%${key}%'
			or r.goods_id like '%${key}%'
			or
			r.comment like '%${key}%'
			or r.price like '%${key}%'
			or g.name like
			'%${key}%' )
		</if>
	</select>
<!-- 
	<select id="searchRecord" parameterType="cn.neu.dto.SearchDto"
		resultType="cn.neu.bean.Record">
		select r.id,r.goods_id,
		r.create_time,r.update_time,r.comment,r.price,r.type,g.name as
		goods_name from `record` as r left join `goods` as g on r.goods_id
		=
		g.id
		where 1=1
		<if test="type!=0">
			and r.type = #{type}
		</if>
		and (r.id like '%${key}%'
		or r.goods_id like '%${key}%'
		or r.comment
		like '%${key}%'
		or r.price like '%${key}%'
		or g.name like '%${key}%' )
		<if test="limit!=0">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="getSearchCount" parameterType="cn.neu.dto.SearchDto"
		resultType="Integer">
		select count(*) from `record` as r left join `goods` as g on
		r.goods_id = g.id where 1=1
		<if test="type!=0">
			and type = #{type}
		</if>
		and (r.id like '%${key}%'
		or r.goods_id like '%${key}%'
		or r.comment
		like '%${key}%'
		or r.price like '%${key}%'
		or g.name like '%${key}%')
	</select>
-->
	<select id="profit" parameterType="cn.neu.dto.ProfitParamsDto"
		resultType="cn.neu.bean.Record">
		select * from `record` where 1=1
		<if test="s_time !=null and e_time !=null">
			and create_time &gt; #{s_time} and create_time &lt;
			#{e_time}
		</if>
		<if test="goods_id !=0">
			and goods_id = #{goods_id}
		</if>
		<if test="type !=0">
			and type = #{type}
		</if>
	</select>
	<select id="output" parameterType="cn.neu.dto.OutputParamsDto"
		resultType="cn.neu.bean.OutputRecord">
		select
		r.create_time,r.update_time,r.comment,r.price,r.type,g.name as
		goodsName from `record` as r left join `goods` as g on r.goods_id
		=
		g.id
		where 1=1
		<if test="type != 0">
			and r.type = #{type}
		</if>
	</select>

	<insert id="batchInsertRecords">
		insert into record
		(`goods_id`,`create_time`,`update_time`,`comment`,`price`,`type`)
		values
		<foreach collection="list" index="index" item="item"
			separator=",">
			(#{item.goods_id},#{item.create_time},#{item.update_time},#{item.comment},#{item.price},#{item.type})
		</foreach>
	</insert>
</mapper>