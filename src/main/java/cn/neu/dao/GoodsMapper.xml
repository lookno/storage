<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="cn.neu.dao.GoodsDao">
	<insert id="insertGoods" parameterType="cn.neu.bean.Goods">
		<selectKey resultType="int" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into
		`goods`(`name`,`count`,`type`,`price`) values(
		#{name,jdbcType=VARCHAR},
		#{count,jdbcType=INTEGER},
		#{type,jdbcType=INTEGER},
		#{price,jdbcType=DOUBLE}
		)
	</insert>
	<select id="getGoodsById" parameterType="int" resultType="cn.neu.bean.Goods">
		select * from goods where id = #{id}
	</select>
	<update id="updateGoods" parameterType="cn.neu.bean.Goods">
		update `goods` set id = #{id,jdbcType=INTEGER}
		<if test="name !=null">
			, `name` = #{name,jdbcType=VARCHAR}
		</if>
		<if test="count !=0">
			, `count` = `count` + #{count,jdbcType=INTEGER}
		</if>
		<if test="type !=0">
			, `type` = #{type,jdbcType=INTEGER}
		</if>
		<if test="price !=0">
			, `price` = #{price,jdbcType=DOUBLE}
		</if>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="listGoods" parameterType="cn.neu.dto.GoodsDto"
		resultType="cn.neu.bean.Goods">
		select * from `goods` where 1=1
		<if test="id !=0">
			and `id` = #{id,jdbcType=INTEGER}
		</if>
		<if test="name !=null">
			and `name` = #{name,jdbcType=INTEGER}
		</if>
		<if test="type !=0">
			and `type` = #{type,jdbcType=INTEGER}
		</if>
		<if test="listZero == false">
			and `count` >0
		</if>
		<if test="key!=null">
			and (`id` like '%${key}%' or `name` like
			'%${key}%' or
			`count` like
			'%${key}%' or `price` like
			'%${key}%')
		</if>
		<if test="limit!=0">
			limit #{start},#{limit}
		</if>
	</select>
<!--  	<select id="searchGoods" parameterType="cn.neu.dto.SearchDto"
		resultType="cn.neu.bean.Goods">
		select * from `goods` where 1=1
		<if test="type!=0">
			and type = #{type}
		</if>
		and (`id` like '%${key}%' or `name` like
		'%${key}%' or `count` like
		'%${key}%' or `price` like
		'%${key}%')
		<if test="limit!=0">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="getSearchCount" parameterType="cn.neu.dto.SearchDto"
		resultType="Integer">
		select count(*) from `goods` where 1=1
		<if test="type!=0">
			and type = #{type}
		</if>
		and (`id` like '%${key}%' or `name` like
		'%${key}%' or `count` like
		'%${key}%' or `price` like
		'%${key}%')
	</select>
-->
	<select id="getTotalNum" parameterType="cn.neu.dto.GoodsDto"
		resultType="Integer">
		select count(*) from `goods` where 1=1
		<if test="type !=0">
			and `type` = #{type,jdbcType=INTEGER}
		</if>
		<if test="key!=null">
			and (`id` like '%${key}%' or `name` like
			'%${key}%' or `count` like
			'%${key}%' or `price` like
			'%${key}%')
		</if>
		<if test="listZero == false">
			and `count` >0
		</if>
	</select>
	<insert id="batchInsertGoods">
		insert into goods(`id`,`name`,`count`,`price`,`type`) values
		<foreach collection="list" index="index" item="item"
			separator=",">
			(#{item.id},#{item.name},#{item.count},#{item.price},#{item.type})
		</foreach>
	</insert>
</mapper>